#define _BSD_SOURCE
#define _GNU_SOURCE
#include <stdio.h>
#include <assert.h>
#include <string.h>
#include <sys/stat.h>
#include <endian.h>
#include <stdint.h>
#include <stdlib.h>

static const uint32_t tsource = htole32 (1000000000),
                      tcracked = htole32 (2006632960);

int main()
{
	struct stat st;
	stat ("source", &st);

	char* buffer = malloc (st.st_size);

	FILE* source = fopen ("source", "rb");
	fread (buffer, 1, st.st_size, source);
	fclose (source);

	void* data = memmem (buffer, st.st_size, &tsource, sizeof (tsource));

	*(uint32_t*)data = tcracked;

	FILE* cracked = fopen ("cracked", "wb");
	fwrite (buffer, 1, st.st_size, cracked);
	fclose (cracked);

	free (buffer);
	return 0;
}
